{
	"info": {
		"_postman_id": "afb3346a-4011-4881-8f74-f33e4a6d13c7",
		"name": "Desafio_Spring_Grupo2_Transformeli",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21600732"
	},
	"item": [
		{
			"name": "api/v1/articles",
			"item": [
				{
					"name": "api/v1/articles?category=",
					"item": [
						{
							"name": "[200] Busca por categoria válida de produtos",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/v1/articles?category=Esportes",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles"
									],
									"query": [
										{
											"key": "category",
											"value": "Esportes",
											"description": "Categoria de produtos. "
										}
									]
								}
							},
							"response": [
								{
									"name": "[200] Busca por categoria válida de produtos",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Esportes",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Esportes"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Jul 2022 20:24:02 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"productId\": 4,\n        \"name\": \"Chuteira\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 5,\n        \"name\": \"Mini Cama elastica\",\n        \"quantity\": 4\n    },\n    {\n        \"productId\": 6,\n        \"name\": \"Camiseta\",\n        \"quantity\": 2\n    }\n]"
								}
							]
						},
						{
							"name": "[200] Busca por categoria válida em upper case",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/v1/articles?category=CELULARES",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles"
									],
									"query": [
										{
											"key": "category",
											"value": "CELULARES",
											"description": "Categoria de produtos. "
										}
									]
								}
							},
							"response": [
								{
									"name": "[200] Busca por categoria válida em upper case",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=CELULARES",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "CELULARES",
													"description": "Categoria de produtos. "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Jul 2022 20:29:30 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"productId\": 7,\n        \"name\": \"Redmi Note 9\",\n        \"quantity\": 15\n    },\n    {\n        \"productId\": 8,\n        \"name\": \"Smartwatch\",\n        \"quantity\": 5\n    }\n]"
								}
							]
						},
						{
							"name": "[200] Busca por categoria válida em lower case",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/v1/articles?category=roupas",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles"
									],
									"query": [
										{
											"key": "category",
											"value": "roupas",
											"description": "Categoria de produtos. "
										}
									]
								}
							},
							"response": [
								{
									"name": "[200] Busca por categoria válida em lower case",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=roupas",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "roupas",
													"description": "Categoria de produtos. "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Jul 2022 20:28:43 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"productId\": 9,\n        \"name\": \"Camisa\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 10,\n        \"name\": \"Calcas\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 11,\n        \"name\": \"Meias\",\n        \"quantity\": 8\n    },\n    {\n        \"productId\": 12,\n        \"name\": \"Shorts\",\n        \"quantity\": 9\n    }\n]"
								}
							]
						},
						{
							"name": "[404] Busca por categoria inválida",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/v1/articles?category=PeRFuMaRi4",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles"
									],
									"query": [
										{
											"key": "category",
											"value": "PeRFuMaRi4",
											"description": "Categoria de produtos. "
										}
									]
								}
							},
							"response": [
								{
									"name": "[404] Busca por categoria inválida",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=PeRFuMaRi4",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "PeRFuMaRi4",
													"description": "Categoria de produtos. "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sun, 10 Jul 2022 23:17:52 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"message\": \"No registered products in this category\",\n    \"timestamp\": \"2022-07-10T20:17:52.008091\"\n}"
								}
							]
						},
						{
							"name": "[404] Busca sem filtro de categoria",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/v1/articles?category=",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles"
									],
									"query": [
										{
											"key": "category",
											"value": "",
											"description": "Categoria de produtos. "
										}
									]
								}
							},
							"response": [
								{
									"name": "[404] Busca sem filtro de categoria",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "",
													"description": "Categoria de produtos. "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sun, 10 Jul 2022 23:18:26 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"message\": \"No registered products in this category\",\n    \"timestamp\": \"2022-07-10T20:18:26.159461\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "api/v1/articles?category=&freeShipping=",
					"item": [
						{
							"name": "[200] Categoria válida",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/v1/articles?category=Celulares",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles"
									],
									"query": [
										{
											"key": "category",
											"value": "Celulares",
											"description": "Categoria do produto."
										},
										{
											"key": "freeShipping",
											"value": "true",
											"description": "Frete grátis do produto.",
											"disabled": true
										},
										{
											"key": "order",
											"value": "3",
											"description": "Critério de ordenação.",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "[200] Categoria válida",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Celulares",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Celulares",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "true",
													"description": "Frete grátis do produto.",
													"disabled": true
												},
												{
													"key": "order",
													"value": "3",
													"description": "Critério de ordenação.",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 11 Jul 2022 00:09:44 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"productId\": 7,\n        \"name\": \"Redmi Note 9\",\n        \"quantity\": 15\n    },\n    {\n        \"productId\": 8,\n        \"name\": \"Smartwatch\",\n        \"quantity\": 5\n    }\n]"
								}
							]
						},
						{
							"name": "[200] Categoria inválida",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/v1/articles?category=Mesa",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles"
									],
									"query": [
										{
											"key": "category",
											"value": "Mesa",
											"description": "Categoria do produto."
										},
										{
											"key": "freeShipping",
											"value": "true",
											"description": "Frete grátis do produto.",
											"disabled": true
										},
										{
											"key": "order",
											"value": "3",
											"description": "Critério de ordenação.",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "[200] Categoria inválida",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Mesa",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Mesa",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "true",
													"description": "Frete grátis do produto.",
													"disabled": true
												},
												{
													"key": "order",
													"value": "3",
													"description": "Critério de ordenação.",
													"disabled": true
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 11 Jul 2022 00:10:31 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"message\": \"No registered products in this category\",\n    \"timestamp\": \"2022-07-10T21:10:31.386778\"\n}"
								}
							]
						},
						{
							"name": "[200] Frete grátis true",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/v1/articles?freeShipping=true",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles"
									],
									"query": [
										{
											"key": "category",
											"value": "Mesa",
											"description": "Categoria do produto.",
											"disabled": true
										},
										{
											"key": "freeShipping",
											"value": "true",
											"description": "Frete grátis do produto."
										},
										{
											"key": "order",
											"value": "3",
											"description": "Critério de ordenação.",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "[200] Frete grátis true",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?freeShipping=true",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Mesa",
													"description": "Categoria do produto.",
													"disabled": true
												},
												{
													"key": "freeShipping",
													"value": "true",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "3",
													"description": "Critério de ordenação.",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 11 Jul 2022 00:11:07 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"productId\": 1,\n        \"name\": \"Serra de Bancada\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 2,\n        \"name\": \"Furadeira\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 3,\n        \"name\": \"Soldadora\",\n        \"quantity\": 10\n    },\n    {\n        \"productId\": 4,\n        \"name\": \"Chuteira\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 5,\n        \"name\": \"Mini Cama elastica\",\n        \"quantity\": 4\n    },\n    {\n        \"productId\": 7,\n        \"name\": \"Redmi Note 9\",\n        \"quantity\": 15\n    },\n    {\n        \"productId\": 8,\n        \"name\": \"Smartwatch\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 12,\n        \"name\": \"Shorts\",\n        \"quantity\": 9\n    }\n]"
								}
							]
						},
						{
							"name": "[200] Frete grátis false",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/v1/articles?freeShipping=false",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles"
									],
									"query": [
										{
											"key": "category",
											"value": "Mesa",
											"description": "Categoria do produto.",
											"disabled": true
										},
										{
											"key": "freeShipping",
											"value": "false",
											"description": "Frete grátis do produto."
										},
										{
											"key": "order",
											"value": "3",
											"description": "Critério de ordenação.",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "[200] Frete grátis false",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?freeShipping=false",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Mesa",
													"description": "Categoria do produto.",
													"disabled": true
												},
												{
													"key": "freeShipping",
													"value": "false",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "3",
													"description": "Critério de ordenação.",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 11 Jul 2022 00:11:42 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"productId\": 6,\n        \"name\": \"Camiseta\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 9,\n        \"name\": \"Camisa\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 10,\n        \"name\": \"Calcas\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 11,\n        \"name\": \"Meias\",\n        \"quantity\": 8\n    }\n]"
								}
							]
						},
						{
							"name": "[200] Ordenação crescente",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/v1/articles?order=0",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles"
									],
									"query": [
										{
											"key": "category",
											"value": "Mesa",
											"description": "Categoria do produto.",
											"disabled": true
										},
										{
											"key": "freeShipping",
											"value": "false",
											"description": "Frete grátis do produto.",
											"disabled": true
										},
										{
											"key": "order",
											"value": "0",
											"description": "Critério de ordenação."
										}
									]
								}
							},
							"response": [
								{
									"name": "[200] Ordenação crescente",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?order=0",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Mesa",
													"description": "Categoria do produto.",
													"disabled": true
												},
												{
													"key": "freeShipping",
													"value": "false",
													"description": "Frete grátis do produto.",
													"disabled": true
												},
												{
													"key": "order",
													"value": "0",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 11 Jul 2022 00:12:45 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"productId\": 10,\n        \"name\": \"Calcas\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 9,\n        \"name\": \"Camisa\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 6,\n        \"name\": \"Camiseta\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 4,\n        \"name\": \"Chuteira\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 2,\n        \"name\": \"Furadeira\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 11,\n        \"name\": \"Meias\",\n        \"quantity\": 8\n    },\n    {\n        \"productId\": 5,\n        \"name\": \"Mini Cama elastica\",\n        \"quantity\": 4\n    },\n    {\n        \"productId\": 7,\n        \"name\": \"Redmi Note 9\",\n        \"quantity\": 15\n    },\n    {\n        \"productId\": 1,\n        \"name\": \"Serra de Bancada\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 12,\n        \"name\": \"Shorts\",\n        \"quantity\": 9\n    },\n    {\n        \"productId\": 8,\n        \"name\": \"Smartwatch\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 3,\n        \"name\": \"Soldadora\",\n        \"quantity\": 10\n    }\n]"
								}
							]
						},
						{
							"name": "[200] Ordenação decrescente",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/v1/articles?order=1",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles"
									],
									"query": [
										{
											"key": "category",
											"value": "Mesa",
											"description": "Categoria do produto.",
											"disabled": true
										},
										{
											"key": "freeShipping",
											"value": "false",
											"description": "Frete grátis do produto.",
											"disabled": true
										},
										{
											"key": "order",
											"value": "1",
											"description": "Critério de ordenação."
										}
									]
								}
							},
							"response": [
								{
									"name": "[200] Ordenação decrescente",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?order=1",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Mesa",
													"description": "Categoria do produto.",
													"disabled": true
												},
												{
													"key": "freeShipping",
													"value": "false",
													"description": "Frete grátis do produto.",
													"disabled": true
												},
												{
													"key": "order",
													"value": "1",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 11 Jul 2022 00:13:14 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"productId\": 3,\n        \"name\": \"Soldadora\",\n        \"quantity\": 10\n    },\n    {\n        \"productId\": 8,\n        \"name\": \"Smartwatch\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 12,\n        \"name\": \"Shorts\",\n        \"quantity\": 9\n    },\n    {\n        \"productId\": 1,\n        \"name\": \"Serra de Bancada\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 7,\n        \"name\": \"Redmi Note 9\",\n        \"quantity\": 15\n    },\n    {\n        \"productId\": 5,\n        \"name\": \"Mini Cama elastica\",\n        \"quantity\": 4\n    },\n    {\n        \"productId\": 11,\n        \"name\": \"Meias\",\n        \"quantity\": 8\n    },\n    {\n        \"productId\": 2,\n        \"name\": \"Furadeira\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 4,\n        \"name\": \"Chuteira\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 6,\n        \"name\": \"Camiseta\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 9,\n        \"name\": \"Camisa\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 10,\n        \"name\": \"Calcas\",\n        \"quantity\": 6\n    }\n]"
								}
							]
						},
						{
							"name": "[200] Ordenação do maior para o menor preço",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/v1/articles?order=2",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles"
									],
									"query": [
										{
											"key": "category",
											"value": "Mesa",
											"description": "Categoria do produto.",
											"disabled": true
										},
										{
											"key": "freeShipping",
											"value": "false",
											"description": "Frete grátis do produto.",
											"disabled": true
										},
										{
											"key": "order",
											"value": "2",
											"description": "Critério de ordenação."
										}
									]
								}
							},
							"response": [
								{
									"name": "[200] Ordenação do maior para o menor preço",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?order=2",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Mesa",
													"description": "Categoria do produto.",
													"disabled": true
												},
												{
													"key": "freeShipping",
													"value": "false",
													"description": "Frete grátis do produto.",
													"disabled": true
												},
												{
													"key": "order",
													"value": "2",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 11 Jul 2022 00:14:32 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"productId\": 11,\n        \"name\": \"Meias\",\n        \"quantity\": 8\n    },\n    {\n        \"productId\": 10,\n        \"name\": \"Calcas\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 9,\n        \"name\": \"Camisa\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 6,\n        \"name\": \"Camiseta\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 5,\n        \"name\": \"Mini Cama elastica\",\n        \"quantity\": 4\n    },\n    {\n        \"productId\": 4,\n        \"name\": \"Chuteira\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 12,\n        \"name\": \"Shorts\",\n        \"quantity\": 9\n    },\n    {\n        \"productId\": 3,\n        \"name\": \"Soldadora\",\n        \"quantity\": 10\n    },\n    {\n        \"productId\": 2,\n        \"name\": \"Furadeira\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 8,\n        \"name\": \"Smartwatch\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 1,\n        \"name\": \"Serra de Bancada\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 7,\n        \"name\": \"Redmi Note 9\",\n        \"quantity\": 15\n    }\n]"
								}
							]
						},
						{
							"name": "[200] Ordenação do menor para o maior preço",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/v1/articles?order=3",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles"
									],
									"query": [
										{
											"key": "category",
											"value": "Mesa",
											"description": "Categoria do produto.",
											"disabled": true
										},
										{
											"key": "freeShipping",
											"value": "false",
											"description": "Frete grátis do produto.",
											"disabled": true
										},
										{
											"key": "order",
											"value": "3",
											"description": "Critério de ordenação."
										}
									]
								}
							},
							"response": [
								{
									"name": "[200] Ordenação do menor para o maior preço",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?order=3",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Mesa",
													"description": "Categoria do produto.",
													"disabled": true
												},
												{
													"key": "freeShipping",
													"value": "false",
													"description": "Frete grátis do produto.",
													"disabled": true
												},
												{
													"key": "order",
													"value": "3",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 11 Jul 2022 00:15:17 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"productId\": 7,\n        \"name\": \"Redmi Note 9\",\n        \"quantity\": 15\n    },\n    {\n        \"productId\": 1,\n        \"name\": \"Serra de Bancada\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 8,\n        \"name\": \"Smartwatch\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 2,\n        \"name\": \"Furadeira\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 3,\n        \"name\": \"Soldadora\",\n        \"quantity\": 10\n    },\n    {\n        \"productId\": 12,\n        \"name\": \"Shorts\",\n        \"quantity\": 9\n    },\n    {\n        \"productId\": 4,\n        \"name\": \"Chuteira\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 5,\n        \"name\": \"Mini Cama elastica\",\n        \"quantity\": 4\n    },\n    {\n        \"productId\": 6,\n        \"name\": \"Camiseta\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 9,\n        \"name\": \"Camisa\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 10,\n        \"name\": \"Calcas\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 11,\n        \"name\": \"Meias\",\n        \"quantity\": 8\n    }\n]"
								}
							]
						},
						{
							"name": "[400] Categoria válida com ordenação não existente",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/v1/articles?category=Celulares&order=10",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles"
									],
									"query": [
										{
											"key": "category",
											"value": "Celulares",
											"description": "Categoria do produto."
										},
										{
											"key": "freeShipping",
											"value": "true",
											"description": "Frete grátis do produto.",
											"disabled": true
										},
										{
											"key": "order",
											"value": "10",
											"description": "Critério de ordenação."
										}
									]
								}
							},
							"response": [
								{
									"name": "[400] Categoria válida com ordenação não existente",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Celulares&order=10",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Celulares",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "true",
													"description": "Frete grátis do produto.",
													"disabled": true
												},
												{
													"key": "order",
													"value": "10",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 11 Jul 2022 00:19:00 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"title\": \"Bad Request\",\n    \"status\": 400,\n    \"message\": \"invalid orderId\",\n    \"timestamp\": \"2022-07-10T21:19:00.363401\"\n}"
								}
							]
						},
						{
							"name": "[400] Categoria inválida com ordenação não existente",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/v1/articles?freeShipping=false&order=10000",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles"
									],
									"query": [
										{
											"key": "category",
											"value": "Celulares",
											"description": "Categoria do produto.",
											"disabled": true
										},
										{
											"key": "freeShipping",
											"value": "false",
											"description": "Frete grátis do produto."
										},
										{
											"key": "order",
											"value": "10000",
											"description": "Critério de ordenação."
										}
									]
								}
							},
							"response": [
								{
									"name": "[400] Categoria inválida com ordenação não existente",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?freeShipping=false&order=10000",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Celulares",
													"description": "Categoria do produto.",
													"disabled": true
												},
												{
													"key": "freeShipping",
													"value": "false",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "10000",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 11 Jul 2022 00:21:45 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"title\": \"Bad Request\",\n    \"status\": 400,\n    \"message\": \"invalid orderId\",\n    \"timestamp\": \"2022-07-10T21:21:45.094691\"\n}"
								}
							]
						},
						{
							"name": "[400] Frete grátis true com ordenação não existente",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/v1/articles?freeShipping=true&order=100",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles"
									],
									"query": [
										{
											"key": "category",
											"value": "Celulares",
											"description": "Categoria do produto.",
											"disabled": true
										},
										{
											"key": "freeShipping",
											"value": "true",
											"description": "Frete grátis do produto."
										},
										{
											"key": "order",
											"value": "100",
											"description": "Critério de ordenação."
										}
									]
								}
							},
							"response": [
								{
									"name": "[400] Frete grátis true com ordenação não existente",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?freeShipping=true&order=100",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Celulares",
													"description": "Categoria do produto.",
													"disabled": true
												},
												{
													"key": "freeShipping",
													"value": "true",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "100",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 11 Jul 2022 00:20:08 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"title\": \"Bad Request\",\n    \"status\": 400,\n    \"message\": \"invalid orderId\",\n    \"timestamp\": \"2022-07-10T21:20:08.914182\"\n}"
								}
							]
						},
						{
							"name": "[400] Frete grátis false com ordenação não existente",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/v1/articles?freeShipping=false&order=1000",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles"
									],
									"query": [
										{
											"key": "category",
											"value": "Celulares",
											"description": "Categoria do produto.",
											"disabled": true
										},
										{
											"key": "freeShipping",
											"value": "false",
											"description": "Frete grátis do produto."
										},
										{
											"key": "order",
											"value": "1000",
											"description": "Critério de ordenação."
										}
									]
								}
							},
							"response": [
								{
									"name": "[400] Frete grátis false com ordenação não existente",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?freeShipping=false&order=1000",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Celulares",
													"description": "Categoria do produto.",
													"disabled": true
												},
												{
													"key": "freeShipping",
													"value": "false",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "1000",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 11 Jul 2022 00:20:43 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"title\": \"Bad Request\",\n    \"status\": 400,\n    \"message\": \"invalid orderId\",\n    \"timestamp\": \"2022-07-10T21:20:43.794798\"\n}"
								}
							]
						},
						{
							"name": "[200] Categoria válida e frete grátis false e ordenação alfabética crescente",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/v1/articles?category=Roupas&freeShipping=false&order=0",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles"
									],
									"query": [
										{
											"key": "category",
											"value": "Roupas",
											"description": "Categoria do produto."
										},
										{
											"key": "freeShipping",
											"value": "false",
											"description": "Frete grátis do produto."
										},
										{
											"key": "order",
											"value": "0",
											"description": "Critério de ordenação."
										}
									]
								}
							},
							"response": [
								{
									"name": "[200] Categoria válida e frete grátis false e ordenação alfabética crescente",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Roupas&freeShipping=false&order=0",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Roupas",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "false",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "0",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sun, 10 Jul 2022 23:34:40 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"productId\": 10,\n        \"name\": \"Calcas\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 9,\n        \"name\": \"Camisa\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 11,\n        \"name\": \"Meias\",\n        \"quantity\": 8\n    }\n]"
								}
							]
						},
						{
							"name": "[200] Categoria válida e frete grátis false e ordenação alfabética decrescente",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/v1/articles?category=Roupas&freeShipping=false&order=1",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles"
									],
									"query": [
										{
											"key": "category",
											"value": "Roupas",
											"description": "Categoria do produto."
										},
										{
											"key": "freeShipping",
											"value": "false",
											"description": "Frete grátis do produto."
										},
										{
											"key": "order",
											"value": "1",
											"description": "Critério de ordenação."
										}
									]
								}
							},
							"response": [
								{
									"name": "[200] Categoria válida e frete grátis false e ordenação alfabética decrescente",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Roupas&freeShipping=false&order=1",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Roupas",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "false",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "1",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sun, 10 Jul 2022 23:20:35 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"productId\": 11,\n        \"name\": \"Meias\",\n        \"quantity\": 8\n    },\n    {\n        \"productId\": 9,\n        \"name\": \"Camisa\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 10,\n        \"name\": \"Calcas\",\n        \"quantity\": 6\n    }\n]"
								}
							]
						},
						{
							"name": "[200] Categoria válida e frete grátis false e ordenação por menor preço até o maior preço",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/v1/articles?category=Roupas&freeShipping=false&order=3",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles"
									],
									"query": [
										{
											"key": "category",
											"value": "Roupas",
											"description": "Categoria do produto."
										},
										{
											"key": "freeShipping",
											"value": "false",
											"description": "Frete grátis do produto."
										},
										{
											"key": "order",
											"value": "3",
											"description": "Critério de ordenação."
										}
									]
								}
							},
							"response": [
								{
									"name": "[200] Categoria válida e frete grátis false e ordenação por menor preço até o maior preço",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Roupas&freeShipping=false&order=3",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Roupas",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "false",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "3",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sun, 10 Jul 2022 23:38:10 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"productId\": 9,\n        \"name\": \"Camisa\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 10,\n        \"name\": \"Calcas\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 11,\n        \"name\": \"Meias\",\n        \"quantity\": 8\n    }\n]"
								}
							]
						},
						{
							"name": "[200] Categoria válida e frete grátis false e ordenação por maior preço até o menor preço",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/v1/articles?category=Roupas&freeShipping=false&order=2",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles"
									],
									"query": [
										{
											"key": "category",
											"value": "Roupas",
											"description": "Categoria do produto."
										},
										{
											"key": "freeShipping",
											"value": "false",
											"description": "Frete grátis do produto."
										},
										{
											"key": "order",
											"value": "2",
											"description": "Critério de ordenação."
										}
									]
								}
							},
							"response": [
								{
									"name": "[200] Categoria válida e frete grátis false e ordenação por maior preço até o menor preço",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Roupas&freeShipping=false&order=2",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Roupas",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "false",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "2",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sun, 10 Jul 2022 23:41:22 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"productId\": 11,\n        \"name\": \"Meias\",\n        \"quantity\": 8\n    },\n    {\n        \"productId\": 10,\n        \"name\": \"Calcas\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 9,\n        \"name\": \"Camisa\",\n        \"quantity\": 2\n    }\n]"
								}
							]
						},
						{
							"name": "[200] Categoria válida e frete grátis false sem ordenação",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/v1/articles?category=Roupas&freeShipping=false",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles"
									],
									"query": [
										{
											"key": "category",
											"value": "Roupas",
											"description": "Categoria do produto."
										},
										{
											"key": "freeShipping",
											"value": "false",
											"description": "Frete grátis do produto."
										},
										{
											"key": "order",
											"value": "2",
											"description": "Critério de ordenação.",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "[200] Categoria válida e frete grátis false sem ordenação",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Roupas&freeShipping=false",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Roupas",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "false",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "2",
													"description": "Critério de ordenação.",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sun, 10 Jul 2022 23:43:11 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"productId\": 9,\n        \"name\": \"Camisa\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 10,\n        \"name\": \"Calcas\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 11,\n        \"name\": \"Meias\",\n        \"quantity\": 8\n    }\n]"
								}
							]
						},
						{
							"name": "[200] Categoria válida e frete grátis false sem ordenação",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/v1/articles?category=Roupas&freeShipping=false",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles"
									],
									"query": [
										{
											"key": "category",
											"value": "Roupas",
											"description": "Categoria do produto."
										},
										{
											"key": "freeShipping",
											"value": "false",
											"description": "Frete grátis do produto."
										},
										{
											"key": "order",
											"value": "0",
											"description": "Critério de ordenação.",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "[200] Categoria válida e frete grátis false sem ordenação",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Roupas&freeShipping=false",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Roupas",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "false",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "0",
													"description": "Critério de ordenação.",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Jul 2022 21:09:05 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"productId\": 9,\n        \"name\": \"Camisa\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 10,\n        \"name\": \"Calcas\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 11,\n        \"name\": \"Meias\",\n        \"quantity\": 8\n    }\n]"
								}
							]
						},
						{
							"name": "[200] Categoria válida, frete grátis true sem ordenação",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/v1/articles?category=Roupas&freeShipping=false",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles"
									],
									"query": [
										{
											"key": "category",
											"value": "Roupas",
											"description": "Categoria do produto."
										},
										{
											"key": "freeShipping",
											"value": "false",
											"description": "Frete grátis do produto."
										},
										{
											"key": "order",
											"value": "0",
											"description": "Critério de ordenação.",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "[200] Categoria válida, frete grátis true sem ordenação",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Roupas&freeShipping=false",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Roupas",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "false",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "0",
													"description": "Critério de ordenação.",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sun, 10 Jul 2022 23:44:48 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"productId\": 9,\n        \"name\": \"Camisa\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 10,\n        \"name\": \"Calcas\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 11,\n        \"name\": \"Meias\",\n        \"quantity\": 8\n    }\n]"
								}
							]
						},
						{
							"name": "[200] Categoria válida, frete grátis true e ordenação alfabética crescente",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/v1/articles?category=Ferramentas&freeShipping=true&order=0",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles"
									],
									"query": [
										{
											"key": "category",
											"value": "Ferramentas",
											"description": "Categoria do produto."
										},
										{
											"key": "freeShipping",
											"value": "true",
											"description": "Frete grátis do produto."
										},
										{
											"key": "order",
											"value": "0",
											"description": "Critério de ordenação."
										}
									]
								}
							},
							"response": [
								{
									"name": "[200] Categoria válida, frete grátis true e ordenação alfabética crescente",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Ferramentas&freeShipping=true&order=0",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Ferramentas",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "true",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "0",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Jul 2022 20:51:51 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"productId\": 2,\n        \"name\": \"Furadeira\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 1,\n        \"name\": \"Serra de Bancada\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 3,\n        \"name\": \"Soldadora\",\n        \"quantity\": 10\n    }\n]"
								}
							]
						},
						{
							"name": "[200] Categoria válida, frete grátis true e ordenação alfabética decrescente",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/v1/articles?category=Ferramentas&freeShipping=true&order=1",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles"
									],
									"query": [
										{
											"key": "category",
											"value": "Ferramentas",
											"description": "Categoria do produto."
										},
										{
											"key": "freeShipping",
											"value": "true",
											"description": "Frete grátis do produto."
										},
										{
											"key": "order",
											"value": "1",
											"description": "Critério de ordenação."
										}
									]
								}
							},
							"response": [
								{
									"name": "[200] Categoria válida, frete grátis true e ordenação alfabética decrescente",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Ferramentas&freeShipping=true&order=1",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Ferramentas",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "true",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "1",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sun, 10 Jul 2022 23:49:07 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"productId\": 3,\n        \"name\": \"Soldadora\",\n        \"quantity\": 10\n    },\n    {\n        \"productId\": 1,\n        \"name\": \"Serra de Bancada\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 2,\n        \"name\": \"Furadeira\",\n        \"quantity\": 7\n    }\n]"
								}
							]
						},
						{
							"name": "[200] Categoria válida, frete grátis true ordenado do maior para o menor preço",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/v1/articles?category=Ferramentas&freeShipping=true&order=2",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles"
									],
									"query": [
										{
											"key": "category",
											"value": "Ferramentas",
											"description": "Categoria do produto."
										},
										{
											"key": "freeShipping",
											"value": "true",
											"description": "Frete grátis do produto."
										},
										{
											"key": "order",
											"value": "2",
											"description": "Critério de ordenação."
										}
									]
								}
							},
							"response": [
								{
									"name": "[200] Categoria válida, frete grátis true ordenado do maior para o menor preço",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Ferramentas&freeShipping=true&order=2",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Ferramentas",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "true",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "2",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sun, 10 Jul 2022 23:50:22 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"productId\": 3,\n        \"name\": \"Soldadora\",\n        \"quantity\": 10\n    },\n    {\n        \"productId\": 2,\n        \"name\": \"Furadeira\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 1,\n        \"name\": \"Serra de Bancada\",\n        \"quantity\": 5\n    }\n]"
								}
							]
						},
						{
							"name": "[200] Categoria válida, frete grátis true ordenado do menor para o maior preço",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/v1/articles?category=Ferramentas&freeShipping=true&order=3",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles"
									],
									"query": [
										{
											"key": "category",
											"value": "Ferramentas",
											"description": "Categoria do produto."
										},
										{
											"key": "freeShipping",
											"value": "true",
											"description": "Frete grátis do produto."
										},
										{
											"key": "order",
											"value": "3",
											"description": "Critério de ordenação."
										}
									]
								}
							},
							"response": [
								{
									"name": "[200] Categoria válida, frete grátis true ordenado do menor para o maior preço",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Ferramentas&freeShipping=true&order=3",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Ferramentas",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "true",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "3",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sun, 10 Jul 2022 23:51:24 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"productId\": 1,\n        \"name\": \"Serra de Bancada\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 2,\n        \"name\": \"Furadeira\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 3,\n        \"name\": \"Soldadora\",\n        \"quantity\": 10\n    }\n]"
								}
							]
						},
						{
							"name": "[404] Categoria inválida, frete grátis true sem ordenação",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/v1/articles?category=Banho&freeShipping=true",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles"
									],
									"query": [
										{
											"key": "category",
											"value": "Banho",
											"description": "Categoria do produto."
										},
										{
											"key": "freeShipping",
											"value": "true",
											"description": "Frete grátis do produto."
										},
										{
											"key": "order",
											"value": "3",
											"description": "Critério de ordenação.",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "[404] Categoria inválida, frete grátis true sem ordenação",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Banho&freeShipping=true",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Banho",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "true",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "3",
													"description": "Critério de ordenação.",
													"disabled": true
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sun, 10 Jul 2022 23:55:07 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"message\": \"No registered products in this category\",\n    \"timestamp\": \"2022-07-10T20:55:07.450302\"\n}"
								}
							]
						},
						{
							"name": "[404] Categoria inválida, frete grátis true sem ordenação alfabética crescente",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/v1/articles?category=Mesa&freeShipping=true&order=0",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles"
									],
									"query": [
										{
											"key": "category",
											"value": "Mesa",
											"description": "Categoria do produto."
										},
										{
											"key": "freeShipping",
											"value": "true",
											"description": "Frete grátis do produto."
										},
										{
											"key": "order",
											"value": "0",
											"description": "Critério de ordenação."
										}
									]
								}
							},
							"response": [
								{
									"name": "[404] Categoria inválida, frete grátis true sem ordenação alfabética crescente",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Mesa&freeShipping=true&order=0",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Mesa",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "true",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "0",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sun, 10 Jul 2022 23:56:49 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"message\": \"No registered products in this category\",\n    \"timestamp\": \"2022-07-10T20:56:49.871879\"\n}"
								}
							]
						},
						{
							"name": "[404] Categoria inválida, frete grátis true sem ordenação alfabética decrescente",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/v1/articles?category=Cama&freeShipping=true&order=1",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles"
									],
									"query": [
										{
											"key": "category",
											"value": "Cama",
											"description": "Categoria do produto."
										},
										{
											"key": "freeShipping",
											"value": "true",
											"description": "Frete grátis do produto."
										},
										{
											"key": "order",
											"value": "1",
											"description": "Critério de ordenação."
										}
									]
								}
							},
							"response": [
								{
									"name": "[404] Categoria inválida, frete grátis true sem ordenação alfabética decrescente",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Cama&freeShipping=true&order=1",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Cama",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "true",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "1",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sun, 10 Jul 2022 23:57:36 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"message\": \"No registered products in this category\",\n    \"timestamp\": \"2022-07-10T20:57:36.576874\"\n}"
								}
							]
						},
						{
							"name": "[404] Categoria inválida, frete grátis true sem ordenação do maior para o menor preço",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/v1/articles?category=Cama&freeShipping=true&order=2",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles"
									],
									"query": [
										{
											"key": "category",
											"value": "Cama",
											"description": "Categoria do produto."
										},
										{
											"key": "freeShipping",
											"value": "true",
											"description": "Frete grátis do produto."
										},
										{
											"key": "order",
											"value": "2",
											"description": "Critério de ordenação."
										}
									]
								}
							},
							"response": [
								{
									"name": "[404] Categoria inválida, frete grátis true sem ordenação do maior para o menor preço",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Cama&freeShipping=true&order=2",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Cama",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "true",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "2",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sun, 10 Jul 2022 23:58:44 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"message\": \"No registered products in this category\",\n    \"timestamp\": \"2022-07-10T20:58:44.215141\"\n}"
								}
							]
						},
						{
							"name": "[404] Categoria inválida, frete grátis true sem ordenação do menor para o maior preço",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/v1/articles?category=Cama&freeShipping=true&order=3",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles"
									],
									"query": [
										{
											"key": "category",
											"value": "Cama",
											"description": "Categoria do produto."
										},
										{
											"key": "freeShipping",
											"value": "true",
											"description": "Frete grátis do produto."
										},
										{
											"key": "order",
											"value": "3",
											"description": "Critério de ordenação."
										}
									]
								}
							},
							"response": [
								{
									"name": "[404] Categoria inválida, frete grátis true sem ordenação do menor para o maior preço",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Cama&freeShipping=true&order=3",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Cama",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "true",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "3",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sun, 10 Jul 2022 23:59:39 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"message\": \"No registered products in this category\",\n    \"timestamp\": \"2022-07-10T20:59:39.888865\"\n}"
								}
							]
						},
						{
							"name": "[404] Categoria inválida, frete grátis false sem ordenação",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/v1/articles?category=Cama&freeShipping=true",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles"
									],
									"query": [
										{
											"key": "category",
											"value": "Cama",
											"description": "Categoria do produto."
										},
										{
											"key": "freeShipping",
											"value": "true",
											"description": "Frete grátis do produto."
										},
										{
											"key": "order",
											"value": "3",
											"description": "Critério de ordenação.",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "[404] Categoria inválida, frete grátis false sem ordenação",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Cama&freeShipping=true",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Cama",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "true",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "3",
													"description": "Critério de ordenação.",
													"disabled": true
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 11 Jul 2022 00:04:26 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"message\": \"No registered products in this category\",\n    \"timestamp\": \"2022-07-10T21:04:26.718156\"\n}"
								}
							]
						},
						{
							"name": "[404] Categoria inválida, frete grátis false em ordem alfabética crescente",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/v1/articles?category=Cama&freeShipping=true&order=0",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles"
									],
									"query": [
										{
											"key": "category",
											"value": "Cama",
											"description": "Categoria do produto."
										},
										{
											"key": "freeShipping",
											"value": "true",
											"description": "Frete grátis do produto."
										},
										{
											"key": "order",
											"value": "0",
											"description": "Critério de ordenação."
										}
									]
								}
							},
							"response": [
								{
									"name": "[404] Categoria inválida, frete grátis false em ordem alfabética crescente",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Cama&freeShipping=true&order=0",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Cama",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "true",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "0",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 11 Jul 2022 00:05:47 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"message\": \"No registered products in this category\",\n    \"timestamp\": \"2022-07-10T21:05:47.349897\"\n}"
								}
							]
						},
						{
							"name": "[404] Categoria inválida, frete grátis false em ordem alfabética decrescente",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/v1/articles?category=Cama&freeShipping=true&order=1",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles"
									],
									"query": [
										{
											"key": "category",
											"value": "Cama",
											"description": "Categoria do produto."
										},
										{
											"key": "freeShipping",
											"value": "true",
											"description": "Frete grátis do produto."
										},
										{
											"key": "order",
											"value": "1",
											"description": "Critério de ordenação."
										}
									]
								}
							},
							"response": [
								{
									"name": "[404] Categoria inválida, frete grátis false em ordem alfabética decrescente",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Cama&freeShipping=true&order=1",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Cama",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "true",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "1",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 11 Jul 2022 00:06:13 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"message\": \"No registered products in this category\",\n    \"timestamp\": \"2022-07-10T21:06:13.948484\"\n}"
								}
							]
						},
						{
							"name": "[404] Categoria inválida, frete grátis false em ordem do maior para o menor preço",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/v1/articles?category=Cama&freeShipping=true&order=2",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles"
									],
									"query": [
										{
											"key": "category",
											"value": "Cama",
											"description": "Categoria do produto."
										},
										{
											"key": "freeShipping",
											"value": "true",
											"description": "Frete grátis do produto."
										},
										{
											"key": "order",
											"value": "2",
											"description": "Critério de ordenação."
										}
									]
								}
							},
							"response": [
								{
									"name": "[404] Categoria inválida, frete grátis false em ordem do maior para o menor preço",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Cama&freeShipping=true&order=2",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Cama",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "true",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "2",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 11 Jul 2022 00:07:01 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"message\": \"No registered products in this category\",\n    \"timestamp\": \"2022-07-10T21:07:01.144712\"\n}"
								}
							]
						},
						{
							"name": "[404] Categoria inválida, frete grátis false em ordem do menor para o maior preço",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/v1/articles?category=Cama&freeShipping=true&order=3",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles"
									],
									"query": [
										{
											"key": "category",
											"value": "Cama",
											"description": "Categoria do produto."
										},
										{
											"key": "freeShipping",
											"value": "true",
											"description": "Frete grátis do produto."
										},
										{
											"key": "order",
											"value": "3",
											"description": "Critério de ordenação."
										}
									]
								}
							},
							"response": [
								{
									"name": "[404] Categoria inválida, frete grátis false em ordem do menor para o maior preço",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Cama&freeShipping=true&order=3",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Cama",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "true",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "3",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 11 Jul 2022 00:07:39 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"message\": \"No registered products in this category\",\n    \"timestamp\": \"2022-07-10T21:07:39.027758\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "api/v1/articles?freeShipping=&prestige=",
					"item": [
						{
							"name": "[200] freeShipping=true & prestige=***",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/v1/articles?freeShipping=true&prestige=***",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles"
									],
									"query": [
										{
											"key": "freeShipping",
											"value": "true"
										},
										{
											"key": "prestige",
											"value": "***"
										}
									]
								}
							},
							"response": [
								{
									"name": "api/v1/articles?freeShipping=&prestige=",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?freeShipping=true&prestige=***",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "freeShipping",
													"value": "true"
												},
												{
													"key": "prestige",
													"value": "***"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sat, 09 Jul 2022 00:00:21 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"productId\": 3,\n        \"name\": \"Soldadora\",\n        \"quantity\": 10\n    },\n    {\n        \"productId\": 12,\n        \"name\": \"Shorts\",\n        \"quantity\": 9\n    }\n]"
								}
							]
						}
					]
				},
				{
					"name": "api/v1/articles?category=&freeShipping=&order=",
					"item": [
						{
							"name": "[200] Categoria, FreeShipping, Order",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/v1/articles?category=Ferramentas&freeShipping=true&order=0",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles"
									],
									"query": [
										{
											"key": "category",
											"value": "Ferramentas"
										},
										{
											"key": "freeShipping",
											"value": "true"
										},
										{
											"key": "order",
											"value": "0"
										}
									]
								}
							},
							"response": [
								{
									"name": "Alfabético crescente.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Ferramentas&freeShipping=true&order=0",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Ferramentas"
												},
												{
													"key": "freeShipping",
													"value": "true"
												},
												{
													"key": "order",
													"value": "0"
												}
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								},
								{
									"name": "Alfabético decrescente.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Ferramentas&freeShipping=true&order=1",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Ferramentas"
												},
												{
													"key": "freeShipping",
													"value": "true"
												},
												{
													"key": "order",
													"value": "1"
												}
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								},
								{
									"name": "Maior a menor preço.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=FORTGPRO&freeShipping=true&order=2",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "FORTGPRO"
												},
												{
													"key": "freeShipping",
													"value": "true"
												},
												{
													"key": "order",
													"value": "2"
												}
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								},
								{
									"name": "Menor a maior preço.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Ferramentas&freeShipping=true&order=3",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Ferramentas"
												},
												{
													"key": "freeShipping",
													"value": "true"
												},
												{
													"key": "order",
													"value": "3"
												}
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						}
					]
				},
				{
					"name": "api/v1/articles?product=&brand=",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/api/v1/articles?product=Serra de Bancada&brand=FORTGPRO",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"articles"
							],
							"query": [
								{
									"key": "product",
									"value": "Serra de Bancada"
								},
								{
									"key": "brand",
									"value": "FORTGPRO"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "[200] api/v1/articles",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/api/v1/articles",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"articles"
							]
						}
					},
					"response": [
						{
							"name": "[200] Busca lista de produtos",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/v1/articles",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 08 Jul 2022 20:21:31 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"productId\": 1,\n        \"name\": \"Serra de Bancada\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 2,\n        \"name\": \"Furadeira\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 3,\n        \"name\": \"Soldadora\",\n        \"quantity\": 10\n    },\n    {\n        \"productId\": 4,\n        \"name\": \"Chuteira\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 5,\n        \"name\": \"Mini Cama elastica\",\n        \"quantity\": 4\n    },\n    {\n        \"productId\": 6,\n        \"name\": \"Camiseta\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 7,\n        \"name\": \"Redmi Note 9\",\n        \"quantity\": 15\n    },\n    {\n        \"productId\": 8,\n        \"name\": \"Smartwatch\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 9,\n        \"name\": \"Camisa\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 10,\n        \"name\": \"Calcas\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 11,\n        \"name\": \"Meias\",\n        \"quantity\": 8\n    },\n    {\n        \"productId\": 12,\n        \"name\": \"Shorts\",\n        \"quantity\": 9\n    }\n]"
						}
					]
				},
				{
					"name": "[404] api/v1/article",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/api/v1/article",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"article"
							]
						}
					},
					"response": [
						{
							"name": "[404] Endpoint não encontrado de busca de produtos",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/v1/article",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"article"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 08 Jul 2022 20:22:23 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-08T20:22:23.454+00:00\",\n    \"status\": 404,\n    \"error\": \"Not Found\",\n    \"message\": \"No message available\",\n    \"path\": \"/api/v1/article\"\n}"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code 200\", () => {",
							"    pm.response.to.have.status(200);",
							"})"
						]
					}
				}
			]
		},
		{
			"name": "api/v1/insert-articles-request",
			"item": [
				{
					"name": "api/v1/insert-articles-request",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"FORTGPRO\",\n        \"price\": 5000.00,\n        \"quantity\": 5,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"Black & Decker\",\n        \"price\": 100.00,\n        \"quantity\": 7,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/insert-articles-request",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"insert-articles-request"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "api/v1/purchase-request",
			"item": [
				{
					"name": "[200] api/v1/purchase-request",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"productId\": 1,\n        \"name\": \"Serra de Bancada\",\n        \"brand\": \"FORTGPRO\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 2,\n        \"name\": \"Furadeira\",\n        \"brand\": \"Black & Decker\",\n        \"quantity\": 7\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/purchase-request",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"purchase-request"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "api/v1/articles/update-articles/{productId}",
			"item": [
				{
					"name": "[200] api/v1/articles/update-articles/{productId}",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Serra de Bancada\",\n    \"category\": \"Ferramentas\",\n    \"brand\": \"FORTGPRO\",\n    \"price\": 1800.0,\n    \"quantity\": 5,\n    \"freeShipping\": true,\n    \"prestige\": \"****\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/articles/update-articles/1",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"articles",
								"update-articles",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "EXTRA BONUS",
			"item": [
				{
					"name": "api/v1/clients",
					"item": [
						{
							"name": "api/v1/clients/state/{name}",
							"item": [
								{
									"name": "[200] Busca de clientes por estado via path param",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/clients/state/:stateName",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"clients",
												"state",
												":stateName"
											],
											"variable": [
												{
													"key": "stateName",
													"value": "Rio de Janeiro",
													"description": "Estado que o cliente reside. "
												}
											]
										}
									},
									"response": [
										{
											"name": "[200] Busca de clientes por estado via path param",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/clients/state/:stateName",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"clients",
														"state",
														":stateName"
													],
													"variable": [
														{
															"key": "stateName",
															"value": "São Paulo",
															"description": "Estado que o cliente reside. "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Sun, 10 Jul 2022 14:08:58 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"id\": 3,\n        \"name\": \"Evelyn Cristini Oliveira\",\n        \"state\": \"São Paulo\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 5,\n        \"name\": \"Daniele Silva\",\n        \"state\": \"São Paulo\",\n        \"country\": \"Brasil\"\n    }\n]"
										}
									]
								}
							]
						},
						{
							"name": "[200] Busca de clientes",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/clients",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"clients"
									]
								}
							},
							"response": [
								{
									"name": "[200] Busca de clientes",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_URL}}/api/v1/clients",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"clients"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sun, 10 Jul 2022 22:25:20 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"id\": 1,\n        \"name\": \"Alexandre Borges Souza\",\n        \"state\": \"Santa Catarina\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 2,\n        \"name\": \"Alexandre Borges Souza\",\n        \"state\": \"Santa Catarina\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 3,\n        \"name\": \"Evelyn Cristini Oliveira\",\n        \"state\": \"São Paulo\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 4,\n        \"name\": \"Luciana Azevedo\",\n        \"state\": \"I\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 5,\n        \"name\": \"Daniele Silva\",\n        \"state\": \"São Paulo\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 6,\n        \"name\": \"Luísa do Amaral\",\n        \"state\": \"SÃO PAULO\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 7,\n        \"name\": \"Amanda Cardoso\",\n        \"state\": \"SÃO PAULO\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 8,\n        \"name\": \"BOB DYLAN OLIVEIRA THROSSELL\",\n        \"state\": \"SÃO PAULO\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 9,\n        \"name\": \"José Carvalho\",\n        \"state\": \"SÃO PAULO\",\n        \"country\": \"brasil\"\n    },\n    {\n        \"id\": 10,\n        \"name\": \"Marcela Silva\",\n        \"state\": \"Santa Catarina\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 11,\n        \"name\": \"Mari*a Pereira4\",\n        \"state\": \"São Paulo\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 12,\n        \"name\": \"Gust*vo Oliveir4\",\n        \"state\": \"São Paulo\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 13,\n        \"name\": \"Dani*le Oliveir4\",\n        \"state\": \"São Paulo\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 14,\n        \"name\": \"Dani*le Oliveir4\",\n        \"state\": \"São Paulo\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 15,\n        \"name\": \"Dani*le Oliveir4 Souza\",\n        \"state\": \"São Paulo\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 16,\n        \"name\": \"Elisa dos Santos\",\n        \"state\": \"S*0 P#ul0\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 17,\n        \"name\": \"Elisa dos Santos\",\n        \"state\": \"S*0 P#ul0\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 18,\n        \"name\": \"Elisa dos Santos\",\n        \"state\": \"S*0 P#ul0\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 19,\n        \"name\": \"Elisa dos Santos\",\n        \"state\": \"S*0 P#ul0\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 20,\n        \"name\": \"Elisa dos Santos\",\n        \"state\": \"S*0 P#ul0\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 21,\n        \"name\": \"Elisa dos Santos\",\n        \"state\": \"S*0 P#ul0\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 22,\n        \"name\": \"Elisa dos Santos\",\n        \"state\": \"S*0 P#ul0\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 23,\n        \"name\": \"Elisa dos Santos\",\n        \"state\": \"S*0 P#ul0\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 24,\n        \"name\": \"Alex George\",\n        \"state\": \"S*0 P#ul0\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 25,\n        \"name\": \"Maria Aparecida Pereira Oliveira\",\n        \"state\": \"S*0 P#ul0\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 26,\n        \"name\": \"Maria Aparecida Pereira Oliveira\",\n        \"state\": \"S*0 P#ul0\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 27,\n        \"name\": \"Clifford Knight\",\n        \"state\": \"S&0 P4ul0\",\n        \"country\": \"Brasil\"\n    }\n]"
								}
							]
						}
					]
				},
				{
					"name": "[404] Busca de clientes em rota inválida",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/client",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"client"
							]
						}
					},
					"response": [
						{
							"name": "[404] Busca de clientes em rota inválida",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/client",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"client"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sat, 09 Jul 2022 15:45:03 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-09T15:45:03.741+00:00\",\n    \"status\": 404,\n    \"error\": \"Not Found\",\n    \"message\": \"No message available\",\n    \"path\": \"/api/v1/client\"\n}"
						}
					]
				},
				{
					"name": "[404] Busca de clientes em rota inválida com path param",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/client/:clientId",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"client",
								":clientId"
							],
							"variable": [
								{
									"key": "clientId",
									"value": "2",
									"description": "Identificador do cliente. "
								}
							]
						}
					},
					"response": [
						{
							"name": "[404] Busca de clientes em rota inválida com path param",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/client/:clientId",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"client",
										":clientId"
									],
									"variable": [
										{
											"key": "clientId",
											"value": "2",
											"description": "Identificador do cliente. "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sun, 10 Jul 2022 13:55:22 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-10T13:55:22.086+00:00\",\n    \"status\": 404,\n    \"error\": \"Not Found\",\n    \"message\": \"No message available\",\n    \"path\": \"/api/v1/client/2\"\n}"
						}
					]
				},
				{
					"name": "[201] Envio de dados do cliente",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\":31,\n    \"name\":\"Daniele Oliveira\",\n    \"cpf\":\"12545678912\",\n    \"state\":\"São Paulo\",\n    \"country\":\"Brasil\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/clients",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"clients"
							]
						}
					},
					"response": [
						{
							"name": "[201] Envio de dados do cliente",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\":31,\n    \"name\":\"Daniele Oliveira\",\n    \"cpf\":\"12545678912\",\n    \"state\":\"São Paulo\",\n    \"country\":\"Brasil\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/clients",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"clients"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sun, 10 Jul 2022 22:26:22 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 28,\n    \"name\": \"Daniele Oliveira\",\n    \"state\": \"São Paulo\",\n    \"country\": \"Brasil\"\n}"
						}
					]
				},
				{
					"name": "[201] Envio de dados do cliente com nome em upper case",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\":30,\n    \"name\": \"BOB DYLAN THROSSELL\",\n    \"cpf\":\"70002867639\",\n    \"state\":\"SÃO PAULO\",\n    \"country\":\"Brasil\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/clients",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"clients"
							]
						}
					},
					"response": [
						{
							"name": "[201] Envio de dados do cliente com nome em upper case",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\":30,\n    \"name\": \"BOB DYLAN THROSSELL\",\n    \"cpf\":\"70002867639\",\n    \"state\":\"SÃO PAULO\",\n    \"country\":\"Brasil\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/clients",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"clients"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sun, 10 Jul 2022 22:28:13 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 30,\n    \"name\": \"BOB DYLAN THROSSELL\",\n    \"state\": \"SÃO PAULO\",\n    \"country\": \"Brasil\"\n}"
						}
					]
				},
				{
					"name": "[201] Envio de dados do cliente com estado em upper case",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\":33,\n    \"name\": \"Amanda Cardoso\",\n    \"cpf\":\"43002866839\",\n    \"state\":\"SÃO PAULO\",\n    \"country\":\"Brasil\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/clients",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"clients"
							]
						}
					},
					"response": [
						{
							"name": "[201] Envio de dados do cliente com estado em upper case",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\":33,\n    \"name\": \"Amanda Cardoso\",\n    \"cpf\":\"43002866839\",\n    \"state\":\"SÃO PAULO\",\n    \"country\":\"Brasil\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/clients",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"clients"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sun, 10 Jul 2022 22:28:48 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 31,\n    \"name\": \"Amanda Cardoso\",\n    \"state\": \"SÃO PAULO\",\n    \"country\": \"Brasil\"\n}"
						}
					]
				},
				{
					"name": "[201] Envio de dados do cliente com país em lower case",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\":32,\n    \"name\": \"José Souza\",\n    \"cpf\":\"49002842820\",\n    \"state\":\"SÃO PAULO\",\n    \"country\":\"brasil\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/clients",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"clients"
							]
						}
					},
					"response": [
						{
							"name": "[201] Envio de dados do cliente com país em lower case",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\":32,\n    \"name\": \"José Souza\",\n    \"cpf\":\"49002842820\",\n    \"state\":\"SÃO PAULO\",\n    \"country\":\"brasil\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/clients",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"clients"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sun, 10 Jul 2022 22:29:24 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 32,\n    \"name\": \"José Souza\",\n    \"state\": \"SÃO PAULO\",\n    \"country\": \"brasil\"\n}"
						}
					]
				},
				{
					"name": "[400] Envio de dados do cliente com caracteres especiais no nome",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\":33,\n    \"name\":\"Dani*le Oliveir4 Souza da Luz\",\n    \"cpf\":\"35958535350\",\n    \"state\":\"São Paulo\",\n    \"country\":\"Brasil\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/clients",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"clients"
							]
						}
					},
					"response": [
						{
							"name": "[400] Envio de dados do cliente com caracteres especiais no nome",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\":33,\n    \"name\":\"Dani*le Oliveir4 Souza da Luz\",\n    \"cpf\":\"35958535350\",\n    \"state\":\"São Paulo\",\n    \"country\":\"Brasil\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/clients",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"clients"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sun, 10 Jul 2022 22:29:57 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"title\": \"Bad Request\",\n    \"status\": 400,\n    \"message\": \"Client name is not valid. Client name can contain only uppercase and lowercase letters\",\n    \"timestamp\": \"2022-07-10T19:29:57.966766\"\n}"
						}
					]
				},
				{
					"name": "[400] Envio de dados do cliente com letras e caracteres especiais no CPF",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\":33,\n    \"name\":\"Elisa dos Santos\",\n    \"cpf\":\"4a2#356789*9\",\n    \"state\":\"São Paulo\",\n    \"country\":\"Brasil\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/clients",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"clients"
							]
						}
					},
					"response": [
						{
							"name": "[400] Envio de dados do cliente com letras e caracteres especiais no CPF",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\":33,\n    \"name\":\"Elisa dos Santos\",\n    \"cpf\":\"4a2#356789*9\",\n    \"state\":\"São Paulo\",\n    \"country\":\"Brasil\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/clients",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"clients"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sun, 10 Jul 2022 22:30:51 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"title\": \"Bad Request\",\n    \"status\": 400,\n    \"message\": \"Client CPF is not valid. CPF:423567899\",\n    \"timestamp\": \"2022-07-10T19:30:51.669625\"\n}"
						}
					]
				},
				{
					"name": "[400] Envio de dados do cliente com ID em formato incorreto",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\":\"aA\",\n    \"name\":\"Jean Lucca\",\n    \"cpf\":\"45645645645\",\n    \"state\":\"São Paulo\",\n    \"country\":\"Brasil\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/clients",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"clients"
							]
						}
					},
					"response": [
						{
							"name": "[400] Envio de dados do cliente com ID em formato incorreto",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\":\"aA\",\n    \"name\":\"Jean Lucca\",\n    \"cpf\":\"45645645645\",\n    \"state\":\"São Paulo\",\n    \"country\":\"Brasil\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/clients",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"clients"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sun, 10 Jul 2022 16:31:19 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-10T16:31:19.127+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"trace\": \"org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.lang.Integer` from String \\\"aA\\\": not a valid `java.lang.Integer` value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Integer` from String \\\"aA\\\": not a valid `java.lang.Integer` value\\n at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 2, column: 10] (through reference chain: com.github.transformeli.desafiospring.model.Client[\\\"id\\\"])\\n\\tat org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:391)\\n\\tat org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:343)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:185)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)\\n\\tat org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\\n\\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\\n\\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\\n\\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:681)\\n\\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:764)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)\\n\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\\n\\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)\\n\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)\\n\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\\n\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\\n\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)\\n\\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)\\n\\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\\n\\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)\\n\\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1787)\\n\\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\\n\\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\\n\\tat java.base/java.lang.Thread.run(Thread.java:829)\\nCaused by: com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Integer` from String \\\"aA\\\": not a valid `java.lang.Integer` value\\n at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 2, column: 10] (through reference chain: com.github.transformeli.desafiospring.model.Client[\\\"id\\\"])\\n\\tat com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:67)\\n\\tat com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(DeserializationContext.java:1991)\\n\\tat com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(DeserializationContext.java:1219)\\n\\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseInteger(StdDeserializer.java:840)\\n\\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseInteger(StdDeserializer.java:820)\\n\\tat com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer.deserialize(NumberDeserializers.java:531)\\n\\tat com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer.deserialize(NumberDeserializers.java:506)\\n\\tat com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)\\n\\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:391)\\n\\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:184)\\n\\tat com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)\\n\\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)\\n\\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3682)\\n\\tat org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:380)\\n\\t... 51 more\\n\",\n    \"message\": \"JSON parse error: Cannot deserialize value of type `java.lang.Integer` from String \\\"aA\\\": not a valid `java.lang.Integer` value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Integer` from String \\\"aA\\\": not a valid `java.lang.Integer` value\\n at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 2, column: 10] (through reference chain: com.github.transformeli.desafiospring.model.Client[\\\"id\\\"])\",\n    \"path\": \"/api/v1/clients\"\n}"
						}
					]
				},
				{
					"name": "[400] Envio de dados do cliente com body incorreto",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\":7,\n    \"name\":\"Evelyn Cristini Oliveira\",\n    \"cpf\":\"12345678912\",\n    \"state\":\"São Paulo\"\n    \"country\":\"Brasil\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/clients",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"clients"
							]
						}
					},
					"response": [
						{
							"name": "[400] Envio de dados do cliente com body incorreto",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\":7,\n    \"name\":\"Evelyn Cristini Oliveira\",\n    \"cpf\":\"12345678912\",\n    \"state\":\"São Paulo\"\n    \"country\":\"Brasil\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/clients",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"clients"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sat, 09 Jul 2022 14:38:07 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-09T14:38:07.406+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"trace\": \"org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('\\\"' (code 34)): was expecting comma to separate Object entries; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character ('\\\"' (code 34)): was expecting comma to separate Object entries\\n at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 6, column: 6]\\n\\tat org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:391)\\n\\tat org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:343)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:185)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)\\n\\tat org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\\n\\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\\n\\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\\n\\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:681)\\n\\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:764)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)\\n\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\\n\\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)\\n\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)\\n\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\\n\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\\n\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)\\n\\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)\\n\\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\\n\\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)\\n\\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1787)\\n\\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\\n\\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\\n\\tat java.base/java.lang.Thread.run(Thread.java:829)\\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unexpected character ('\\\"' (code 34)): was expecting comma to separate Object entries\\n at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 6, column: 6]\\n\\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2391)\\n\\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:735)\\n\\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(ParserMinimalBase.java:659)\\n\\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(UTF8StreamJsonParser.java:1056)\\n\\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:398)\\n\\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:184)\\n\\tat com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)\\n\\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)\\n\\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3682)\\n\\tat org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:380)\\n\\t... 51 more\\n\",\n    \"message\": \"JSON parse error: Unexpected character ('\\\"' (code 34)): was expecting comma to separate Object entries; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character ('\\\"' (code 34)): was expecting comma to separate Object entries\\n at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 6, column: 6]\",\n    \"path\": \"/api/v1/clients\"\n}"
						}
					]
				},
				{
					"name": "[400] Envio de dados do cliente com sintaxe do body incorreta",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\":7,\n    \"name\":\"Evelyn Cristini Oliveira\",\n    cpf:\"12345678912\",\n    \"state\":\"São Paulo\",\n    \"country\":\"Brasil\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/clients",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"clients"
							]
						}
					},
					"response": [
						{
							"name": "[400] Envio de dados do cliente com sintaxe do body incorreta",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\":7,\n    \"name\":\"Evelyn Cristini Oliveira\",\n    cpf:\"12345678912\",\n    \"state\":\"São Paulo\",\n    \"country\":\"Brasil\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/clients",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"clients"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sun, 10 Jul 2022 15:14:10 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-10T15:14:10.437+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"trace\": \"org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('c' (code 99)): was expecting double-quote to start field name; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character ('c' (code 99)): was expecting double-quote to start field name\\n at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 4, column: 6]\\n\\tat org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:391)\\n\\tat org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:343)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:185)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)\\n\\tat org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\\n\\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\\n\\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\\n\\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:681)\\n\\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:764)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)\\n\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\\n\\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)\\n\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)\\n\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\\n\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\\n\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)\\n\\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)\\n\\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\\n\\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)\\n\\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1787)\\n\\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\\n\\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\\n\\tat java.base/java.lang.Thread.run(Thread.java:829)\\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unexpected character ('c' (code 99)): was expecting double-quote to start field name\\n at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 4, column: 6]\\n\\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2391)\\n\\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:735)\\n\\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(ParserMinimalBase.java:659)\\n\\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleOddName(UTF8StreamJsonParser.java:2096)\\n\\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseName(UTF8StreamJsonParser.java:1746)\\n\\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(UTF8StreamJsonParser.java:1075)\\n\\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:398)\\n\\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:184)\\n\\tat com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)\\n\\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)\\n\\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3682)\\n\\tat org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:380)\\n\\t... 51 more\\n\",\n    \"message\": \"JSON parse error: Unexpected character ('c' (code 99)): was expecting double-quote to start field name; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character ('c' (code 99)): was expecting double-quote to start field name\\n at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 4, column: 6]\",\n    \"path\": \"/api/v1/clients\"\n}"
						}
					]
				},
				{
					"name": "[400] Envio de dados do cliente sem body",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/clients",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"clients"
							]
						}
					},
					"response": [
						{
							"name": "[400] Envio de dados do cliente sem body",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/clients",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"clients"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sat, 09 Jul 2022 14:47:45 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-09T14:47:45.151+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"trace\": \"org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public org.springframework.http.ResponseEntity<com.github.transformeli.desafiospring.dto.ClientDTO> com.github.transformeli.desafiospring.controller.ClientController.createClient(com.github.transformeli.desafiospring.model.Client)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:163)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)\\n\\tat org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\\n\\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\\n\\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\\n\\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:681)\\n\\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:764)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)\\n\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\\n\\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)\\n\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)\\n\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\\n\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\\n\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)\\n\\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)\\n\\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\\n\\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)\\n\\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1787)\\n\\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\\n\\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\\n\\tat java.base/java.lang.Thread.run(Thread.java:829)\\n\",\n    \"message\": \"Required request body is missing: public org.springframework.http.ResponseEntity<com.github.transformeli.desafiospring.dto.ClientDTO> com.github.transformeli.desafiospring.controller.ClientController.createClient(com.github.transformeli.desafiospring.model.Client)\",\n    \"path\": \"/api/v1/clients\"\n}"
						}
					]
				},
				{
					"name": "[400] Envio de dados do cliente com caracteres insuficientes no CPF",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\":5,\n    \"name\": \"Luciana Azevedo\",\n    \"cpf\":\"430126\",\n    \"state\":\"São Paulo\",\n    \"country\":\"Brasil\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/clients",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"clients"
							]
						}
					},
					"response": [
						{
							"name": "[400] Envio de dados do cliente com caracteres insuficientes no CPF",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\":5,\n    \"name\": \"Luciana Azevedo\",\n    \"cpf\":\"430126\",\n    \"state\":\"São Paulo\",\n    \"country\":\"Brasil\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/clients",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"clients"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sun, 10 Jul 2022 22:41:37 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"title\": \"Bad Request\",\n    \"status\": 400,\n    \"message\": \"Client CPF is not valid. CPF:430126\",\n    \"timestamp\": \"2022-07-10T19:41:37.28418\"\n}"
						}
					]
				},
				{
					"name": "[400] Envio de dados do cliente com números adicionais no CPF",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\":11,\n    \"name\": \"Amanda Queiróz\",\n    \"cpf\":\"4301269879876\",\n    \"state\":\"São Paulo\",\n    \"country\":\"Brasil\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/clients",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"clients"
							]
						}
					},
					"response": [
						{
							"name": "[400] Envio de dados do cliente com números adicionais no CPF",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\":11,\n    \"name\": \"Amanda Queiróz\",\n    \"cpf\":\"4301269879876\",\n    \"state\":\"São Paulo\",\n    \"country\":\"Brasil\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/clients",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"clients"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sun, 10 Jul 2022 22:42:18 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"title\": \"Bad Request\",\n    \"status\": 400,\n    \"message\": \"Client CPF is not valid. CPF:4301269879876\",\n    \"timestamp\": \"2022-07-10T19:42:18.435484\"\n}"
						}
					]
				},
				{
					"name": "[404] Envio de dados do cliente em rota inválida",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\":3,\n    \"name\":\"Evelyn Cristini Oliveira\",\n    \"cpf\":\"12345678912\",\n    \"state\":\"São Paulo\",\n    \"country\":\"Brasil\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/client",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"client"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "[404] Envio de dados do cliente em rota inválida",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\":3,\n    \"name\":\"Evelyn Cristini Oliveira\",\n    \"cpf\":\"12345678912\",\n    \"state\":\"São Paulo\",\n    \"country\":\"Brasil\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/client",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"client"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sat, 09 Jul 2022 14:56:50 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-09T14:56:50.557+00:00\",\n    \"status\": 404,\n    \"error\": \"Not Found\",\n    \"message\": \"No message available\",\n    \"path\": \"/api/v1/client\"\n}"
						}
					]
				},
				{
					"name": "[406] Envio de dados do cliente sobreescrito",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\":10,\n    \"name\":\"Marcela Silva\",\n    \"cpf\":\"02059893230\",\n    \"state\":\"Santa Catarina\",\n    \"country\":\"Brasil\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/clients",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"clients"
							]
						}
					},
					"response": [
						{
							"name": "[406] Envio de dados do cliente sobreescrito",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\":10,\n    \"name\":\"Marcela Silva\",\n    \"cpf\":\"02059893230\",\n    \"state\":\"Santa Catarina\",\n    \"country\":\"Brasil\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/clients",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"clients"
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sun, 10 Jul 2022 15:24:14 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"title\": \"Client Already Exists\",\n    \"status\": 406,\n    \"message\": \"Client create request (02059893230) already exists.\",\n    \"timestamp\": \"2022-07-10T12:24:14.049805\"\n}"
						}
					]
				},
				{
					"name": "[406] Envio de dados do cliente novo com valor de ID persistido",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\":1,\n    \"name\":\"Daniele Silva\",\n    \"cpf\":\"78698543809\",\n    \"state\":\"São Paulo\",\n    \"country\":\"Brasil\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/clients",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"clients"
							]
						}
					},
					"response": [
						{
							"name": "[406] Envio de dados do cliente novo com valor de ID persistido",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\":1,\n    \"name\":\"Daniele Silva\",\n    \"cpf\":\"78698543809\",\n    \"state\":\"São Paulo\",\n    \"country\":\"Brasil\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/clients",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"clients"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sat, 09 Jul 2022 14:53:41 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 5,\n    \"name\": \"Daniele Silva\",\n    \"state\": \"São Paulo\",\n    \"country\": \"Brasil\"\n}"
						}
					]
				},
				{
					"name": "[406] Envio de dados do cliente com caracteres especiais no CPF",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Marcela Silva\",\n    \"cpf\": \"020.598.932-30\",\n    \"state\": \"Santa Catarina\",\n    \"country\": \"Brasil\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/clients",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"clients"
							]
						}
					},
					"response": [
						{
							"name": "[406] Envio de dados do cliente com caracteres especiais no CPF",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Marcela Silva\",\n    \"cpf\": \"020.598.932-30\",\n    \"state\": \"Santa Catarina\",\n    \"country\": \"Brasil\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/clients",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"clients"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sun, 10 Jul 2022 15:18:10 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 10,\n    \"name\": \"Marcela Silva\",\n    \"state\": \"Santa Catarina\",\n    \"country\": \"Brasil\"\n}"
						}
					]
				},
				{
					"name": "[406] Envio de dados do cliente com nome vazio",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\":4,\n    \"name\": \"\",\n    \"cpf\":\"73034578901\",\n    \"state\":\"Rio de Janeiro\",\n    \"country\":\"Brasil\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/clients",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"clients"
							]
						}
					},
					"response": [
						{
							"name": "[406] Envio de dados do cliente com nome vazio",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\":4,\n    \"name\": \"\",\n    \"cpf\":\"73034578901\",\n    \"state\":\"Rio de Janeiro\",\n    \"country\":\"Brasil\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/clients",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"clients"
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sat, 09 Jul 2022 13:54:00 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"title\": \"Client param error\",\n    \"status\": 406,\n    \"message\": \"Client name is required\",\n    \"timestamp\": \"2022-07-09T10:54:00.733834\"\n}"
						}
					]
				},
				{
					"name": "[406] Envio de dados do cliente com nome com caracteres insuficientes",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\":34,\n    \"name\": \"Lu\",\n    \"cpf\":\"13423423489\",\n    \"state\":\"Rio de Janeiro\",\n    \"country\":\"Brasil\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/clients",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"clients"
							]
						}
					},
					"response": [
						{
							"name": "[406] Envio de dados do cliente com nome com caracteres insuficientes",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\":4,\n    \"name\": \"Lu\",\n    \"cpf\":\"23423423489\",\n    \"state\":\"Rio de Janeiro\",\n    \"country\":\"Brasil\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/clients",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"clients"
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sat, 09 Jul 2022 14:08:20 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"title\": \"Client param error\",\n    \"status\": 406,\n    \"message\": \"Client requires full name\",\n    \"timestamp\": \"2022-07-09T11:08:20.381662\"\n}"
						}
					]
				},
				{
					"name": "[406] Envio de dados do cliente com país não informado",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\":35,\n    \"name\": \"Luciana Azevedo\",\n    \"cpf\":\"43028698700\",\n    \"state\":\"Rio Grande do Sul\",\n    \"country\":\"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/clients",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"clients"
							]
						}
					},
					"response": [
						{
							"name": "[406] Envio de dados do cliente com país não informado",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\":5,\n    \"name\": \"Luciana Azevedo\",\n    \"cpf\":\"43028698709\",\n    \"state\":\"Rio Grande do Sul\",\n    \"country\":\"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/clients",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"clients"
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sat, 09 Jul 2022 14:15:24 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"title\": \"Client param error\",\n    \"status\": 406,\n    \"message\": \"Client country is required\",\n    \"timestamp\": \"2022-07-09T11:15:24.345372\"\n}"
						}
					]
				},
				{
					"name": "[406] Envio de dados do cliente com estado não informado",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\":35,\n    \"name\": \"Luciana Azevedo\",\n    \"cpf\":\"43028698709\",\n    \"state\":\"\",\n    \"country\":\"Brasil\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/clients",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"clients"
							]
						}
					},
					"response": [
						{
							"name": "[406] Envio de dados do cliente com estado não informado",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\":5,\n    \"name\": \"Luciana Azevedo\",\n    \"cpf\":\"43028698709\",\n    \"state\":\"\",\n    \"country\":\"Brasil\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/clients",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"clients"
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sat, 09 Jul 2022 14:20:35 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"title\": \"Client param error\",\n    \"status\": 406,\n    \"message\": \"Client state is required\",\n    \"timestamp\": \"2022-07-09T11:20:35.909368\"\n}"
						}
					]
				},
				{
					"name": "[406] Envio de dados do cliente repetido com valor de ID diferente",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\":35,\n    \"name\":\"Evelyn Cristini Oliveira\",\n    \"cpf\":\"12345678912\",\n    \"state\":\"São Paulo\",\n    \"country\":\"Brasil\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/clients",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"clients"
							]
						}
					},
					"response": [
						{
							"name": "[406] Envio de dados do cliente repetido com valor de ID diferente",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\":10,\n    \"name\":\"Evelyn Cristini Oliveira\",\n    \"cpf\":\"12345678912\",\n    \"state\":\"São Paulo\",\n    \"country\":\"Brasil\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/clients",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"clients"
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sat, 09 Jul 2022 14:51:13 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"title\": \"Client Already Exists\",\n    \"status\": 406,\n    \"message\": \"Client create request (12345678912) already exists.\",\n    \"timestamp\": \"2022-07-09T11:51:13.111079\"\n}"
						}
					]
				},
				{
					"name": "[406] Envio de dados do cliente com CPF não informado",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\":5,\n    \"name\": \"Luciana Azevedo\",\n    \"cpf\":\"\",\n    \"state\":\"São Paulo\",\n    \"country\":\"Brasil\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/clients",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"clients"
							]
						}
					},
					"response": [
						{
							"name": "[406] Envio de dados do cliente com CPF não informado",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\":5,\n    \"name\": \"Luciana Azevedo\",\n    \"cpf\":\"\",\n    \"state\":\"São Paulo\",\n    \"country\":\"Brasil\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/clients",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"clients"
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sat, 09 Jul 2022 14:24:27 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"title\": \"Client param error\",\n    \"status\": 406,\n    \"message\": \"Client CPF is required\",\n    \"timestamp\": \"2022-07-09T11:24:27.344232\"\n}"
						}
					]
				},
				{
					"name": "[415] Envio de dados do cliente em formato não esperado",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "id",
									"value": "3",
									"description": "Identicador do cliente. ",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Evelyn Cristini Oliveira",
									"description": "Nome do cliente. ",
									"type": "text"
								},
								{
									"key": "cpf",
									"value": "12345678912",
									"description": "CPF do cliente. ",
									"type": "text"
								},
								{
									"key": "state",
									"value": "São Paulo",
									"description": "Estado onde o cliente reside. ",
									"type": "text"
								},
								{
									"key": "country",
									"value": "Brasil",
									"description": "País onde o cliente reside.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/clients",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"clients"
							]
						}
					},
					"response": [
						{
							"name": "[415] Envio de dados do cliente em formato não esperado",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "id",
											"value": "3",
											"description": "Identicador do cliente. ",
											"type": "text"
										},
										{
											"key": "name",
											"value": "Evelyn Cristini Oliveira",
											"description": "Nome do cliente. ",
											"type": "text"
										},
										{
											"key": "cpf",
											"value": "12345678912",
											"description": "CPF do cliente. ",
											"type": "text"
										},
										{
											"key": "state",
											"value": "São Paulo",
											"description": "Estado onde o cliente reside. ",
											"type": "text"
										},
										{
											"key": "country",
											"value": "Brasil",
											"description": "País onde o cliente reside.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/clients",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"clients"
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Accept",
									"value": "application/json, application/*+json"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sat, 09 Jul 2022 15:54:39 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-09T15:54:39.505+00:00\",\n    \"status\": 415,\n    \"error\": \"Unsupported Media Type\",\n    \"trace\": \"org.springframework.web.HttpMediaTypeNotSupportedException: Content type 'application/x-www-form-urlencoded;charset=UTF-8' not supported\\n\\tat org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:211)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)\\n\\tat org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\\n\\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\\n\\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\\n\\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:681)\\n\\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:764)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)\\n\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\\n\\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)\\n\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)\\n\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\\n\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\\n\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)\\n\\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)\\n\\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\\n\\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)\\n\\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1787)\\n\\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\\n\\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\\n\\tat java.base/java.lang.Thread.run(Thread.java:829)\\n\",\n    \"message\": \"Content type 'application/x-www-form-urlencoded;charset=UTF-8' not supported\",\n    \"path\": \"/api/v1/clients\"\n}"
						}
					]
				},
				{
					"name": "[500] Envio de dados do cliente com o body vazio",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/v1/clients",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"v1",
								"clients"
							]
						}
					},
					"response": [
						{
							"name": "[500] Envio de dados do cliente com o body vazio",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/clients",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"clients"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sat, 09 Jul 2022 14:45:59 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-07-09T14:45:59.275+00:00\",\n    \"status\": 500,\n    \"error\": \"Internal Server Error\",\n    \"trace\": \"java.lang.NullPointerException\\n\\tat com.github.transformeli.desafiospring.helper.CPFDocument.getNumberOnlyCPF(CPFDocument.java:15)\\n\\tat com.github.transformeli.desafiospring.service.ClientService.validateAddNewClient(ClientService.java:62)\\n\\tat com.github.transformeli.desafiospring.service.ClientService.saveClient(ClientService.java:53)\\n\\tat com.github.transformeli.desafiospring.controller.ClientController.createClient(ClientController.java:36)\\n\\tat jdk.internal.reflect.GeneratedMethodAccessor37.invoke(Unknown Source)\\n\\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\\n\\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\\n\\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\\n\\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:681)\\n\\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:764)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)\\n\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\\n\\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)\\n\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)\\n\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\\n\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\\n\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)\\n\\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)\\n\\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\\n\\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)\\n\\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1787)\\n\\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\\n\\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\\n\\tat java.base/java.lang.Thread.run(Thread.java:829)\\n\",\n    \"message\": \"No message available\",\n    \"path\": \"/api/v1/clients\"\n}"
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "API_URL",
			"value": "127.0.0.1:8080",
			"type": "string"
		}
	]
}